<script
  type="application/json"
  data-section-type="static-collection"
  data-section-id="{{ section.id }}"
  data-section-data
>
  {
    "context": {
      "see_more": {{ 'general.general.see_more' | t | json }},
      "see_less": {{ 'general.general.see_less' | t | json }}
    }
    {% if settings.product_enable_recently_viewed_products %}
      ,
      "time": {
        "second": {{ 'general.time.second' | t | json }},
        "seconds": {{ 'general.time.seconds' | t | json }},
        "minute": {{ 'general.time.minute' | t | json }},
        "minutes": {{ 'general.time.minutes' | t | json }},
        "hour": {{ 'general.time.hour' | t | json }},
        "hours": {{ 'general.time.hours' | t | json }},
        "ago": {{ 'general.time.ago' | t | json }}
      },
      "product_card_settings": {
        "emphasize_price": "{{ settings.product_grid_emphasize_price }}",
        "sale_badge": "{{ settings.product_sales_badge }}",
        "sale_badge_style": "{{ settings.product_sales_badge_style }}"
      }
    {% endif %}
  }
</script>

{% assign show_sidebar = true %}

{% assign paginate_by = section.settings.products_per_page_range %}
{% if template contains 'view-24' %}
  {% assign paginate_by = 24 %}
{% elsif template contains 'view-36' %}
  {% assign paginate_by = 36 %}
{% elsif template contains 'view-48' %}
  {% assign paginate_by = 48 %}
{% endif %}

{%- capture collection_classes -%}
  {% if show_sidebar %}
    layout--has-sidebar
  {% else %}
    layout--no-sidebar
  {% endif %}
{%- endcapture -%}
<style>
  	@media screen and (min-width: 860px) {
	.bc-productgrid--sidebar {
        float: left;
        width: 185px;
    }
    }
</style>
{% paginate collection.products by paginate_by %}
  <div class="productgrid--outer {{ collection_classes | strip_newlines }}">
    {% if show_sidebar %}
      <div class="bc-productgrid--sidebar">
        

        {% comment %}
          Collection menus
        {% endcomment %}
        {% if section.blocks.size > 0 %}
          {% assign sidebar_menu_depth = menu_depth | times: 1 %}

          <nav
            aria-label="{{ 'general.accessibility.nav_sidebar' | t }}"
            class="productgrid--sidebar-section"
          >
            {% for block in section.blocks %}
              {% assign menu = block.settings.menu %}

              {% if linklists[menu] == blank or linklists[menu].links.size == 0 %}
                {% break %}
              {% endif %}

              <h2 class="productgrid--sidebar-title">
                {{ linklists[menu].title }}
              </h2>
            
              <div class="productgrid--sidebar-item productgrid--sidebar-menu">
                {%
                  include 'navlist',
                  menu_list: linklists[block.settings.menu].links,
                  depth: 1,
                  max_depth: section.settings.menu_depth_range,
                  aria_expanded: true
                %}
              </div>
            {% endfor %}
          </nav>
        {% endif %}
        
        {% unless filter_position == 'above_menus' %}
          <div class="productgrid--sidebar-section">
            <div class="boost-pfs-filter-tree boost-pfs-filter-tree-v" data-is-desktop>{% include 'boost-pfs-filter-skeleton', type: 'filter-tree'  %}
            </div>
          </div>
        {% endunless %}
      </div>
    {% endif %}

    <div class="productgrid--wrapper">
      {% include 'breadcrumbs' %}

      <div class="productgrid--masthead">
        {% if section.settings.show_collection_image and collection.image %}
          <figure class="collection--image">
            {%
              include 'rimg',
              img: collection.image,
              size: '1350x',
              lazy: settings.lazy_load,
              canvas: settings.lazy_load
            %}
          </figure>
        {% endif %}

        <div class="collection--information">
          <h1 class="collection--title boost-pfs-filter-collection-header">
            {{ collection.title }}
          </h1>

          {% if collection.description != blank %}
            <div class="collection--description rte boost-pfs-filter-collection-description">
              {{ collection.description }}
            </div>
          {% endif %}
        </div>

      </div>
      <div class="results--container" data-html="productgrid">

      {% if show_filter_trigger or section.settings.sort_by or section.settings.show_by or section.settings.grid_list %}
        {% capture utility_class %}
          productgrid--utils

          {% if show_filter_trigger or section.settings.sort_by or section.settings.grid_list %}
            productgrid--utils--visible-mobile
          {% endif %}

          {% unless section.settings.show_by or section.settings.sort_by or section.settings.grid_list %}
            productgrid--utils--hidden-desktop
          {% endunless %}
        {% endcapture %}
        <nav
          class="{{ utility_class | strip_newlines }}"
          aria-label="{{ 'general.accessibility.nav_collection_utilities' | t }}"
        >
          {%- if section.settings.sort_by -%}
            <div class="boost-pfs-filter-top-sorting productgrid--utils utils-sortby">{% include 'boost-pfs-filter-skeleton', width: 2 %}</div>
          {%- endif -%}

          {%- if section.settings.show_by or section.settings.grid_list -%}
            <div
              class="
                productgrid--utils
                utils-view
                {% if section.settings.grid_list == false %}
                  utils-hide
                {% endif %}
              "
            >
              <div class="utils-view-container">
                  {%- if section.settings.show_by -%}
                    <ul class="boost-pfs-filter-top-show-limit utils-showby">{% include 'boost-pfs-filter-skeleton', width: 2 %}</ul>
                  {%- endif -%}

                  {% if section.settings.grid_list %}
                    <div class="boost-pfs-filter-top-display-type utils-viewtoggle" data-display-type>
                      <span class="utils-viewtoggle-label">
                        {{ 'product_grid.view_as.title' | t }}
                      </span>

                      <button
                        class="utils-viewtoggle-button active"
                        data-display-type="grid-view"
                        aria-label="grid view"
                      >
                        {% include 'icon-library', id: 'icon-grid' %}
                      </button>

                      <button
                        class="utils-viewtoggle-button"
                        data-display-type="list-view"
                        aria-label="list view"
                      >
                        {% include 'icon-library', id: 'icon-list' %}
                      </button>
                    </div>
                  {% endif %}
              </div>
            </div>
          {%- endif -%}
        </nav>
      {% endif %}
        <div class="boost-pfs-filter-tree-mobile-button" >{% include 'boost-pfs-filter-skeleton', type: 'button' %}</div>
        <div class="boost-pfs-filter-tree boost-pfs-filter-tree-v" data-is-mobile >
        {% comment %} Include placeholder template {% endcomment %}
        {% include 'boost-pfs-filter-skeleton', type: 'filter-tree'  %} 
        </div>
        <ul data-boost-sort="{{ collection.default_sort_by }}" class="boost-pfs-filter-products  productgrid--items {% if settings.enable_product_card_spacing == false %}productgrid--no-spacing{% endif %}" data-html="productgridItems">
          {% for product in collection.products %}
            {%
              include 'product-grid-item',
              product: product
            %}
          {% endfor %}
        </ul>

      <div class="boost-pfs-filter-bottom-pagination"></div>
      <div class="boost-pfs-filter-load-more"></div>
    </div>
  </div>
  {% assign sp_paginate_by = paginate.page_size %}{% endpaginate %}
</div>

{% if settings.product_enable_recently_viewed_products %}
  <aside
    aria-label="Recently viewed products"
    class="product-section--container product-recently-viewed--section"
  >
    <div class="product-recently-viewed-wrapper">
      <div class="product-recently-viewed-header">
        <h2 class="product-recently-viewed-heading">
          {{ 'general.time.previous' | t }}
        </h2>
        <button
          class="product-recently-viewed-clear"
          data-clear-recently-viewed
        >
          {{ 'general.time.clear' | t }}
        </button>
      </div>

      <ul
        class="
          product-section--content
          product-recently-viewed--content
          imagestyle--{{ settings.product_grid_image_style }}
        "
        data-recently-viewed-container
      ></ul>
    </div>
  </aside>
{% endif %}

<script>
  // Declare boostPFSThemeConfig variable
  var boostPFSThemeConfig = {
    label: {
      sorting: {{ 'product_grid.sort_by.title' | t | json }},
      sorting_best_selling: {% assign temp = collection.sort_options[1].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Best Selling" {% endunless %},
      sorting_featured: {% assign temp = collection.sort_options[0].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Featured" {% endunless %},
      sorting_title_ascending: {% assign temp = collection.sort_options[2].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Alphabetically, A-Z" {% endunless %},
      sorting_title_descending: {% assign temp = collection.sort_options[3].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Alphabetically, Z-A" {% endunless %},
      sorting_price_ascending: {% assign temp = collection.sort_options[4].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Lowest Price" {% endunless %},
      sorting_price_descending: {% assign temp = collection.sort_options[5].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Highest Price" {% endunless %},
      sorting_date_ascending: {% assign temp = collection.sort_options[6].name %} {% unless temp == nil  %} {{ temp | json }} {% else %} "Date, Old to New" {% endunless %},
      sorting_date_descending: {% assign temp = collection.sort_options[7].name %} {% unless temp == nil  %} {{ temp | json }} {% else %} "Date, New to Old" {% endunless %},
      sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing'  %} {{ temp | json }} {% else %} "Relevance" {% endunless %},
      sale: {{ 'product.item.badges.sale' | t | json }},
      sold_out: {{ 'product.item.badges.sold_out' | t | json }},  
      prev: {{ 'general.pagination.prev' | t | json }},
      next: {{ 'general.pagination.next' | t | json }},
      show_per_page: {{ 'product_grid.show_per_page.title' | t | json }},
      add_to_cart: {{ 'product.buttons.add_to_cart' | t | json }},
      sold_out: {{ 'product.buttons.sold_out' | t | json }},
      see_more: {{ 'general.general.see_more' | t | json }},
      see_less: {{ 'general.general.see_less' | t | json }},
      quick_look_text: {{ 'product.buttons.quick_shop' | t | json }},
      quick_buy_text: {{ 'product.buttons.add_to_cart' | t | json }},
      quick_choose_options: {{ 'product.buttons.choose_options' | t | json }},
      sale_percentile_html: {{ 'product.item.badges.sale_percentile_html' | t | json }},
      sale_money_html: {{ 'product.item.badges.sale_money_html' | t | json }},
      range_html: {{ 'product.item.price.range_html' | t | json }},
      view_details: {{ 'product.buttons.view_details' | t  | json }},
      view_as_title: {{ 'product_grid.view_as.title' | t | json }},
      swatches_count_one: {{ 'product.color_swatches.swatches_count.one' | t | json }},
      swatches_count_other: {{ 'product.color_swatches.swatches_count.other' | t | json }},
    },
    custom: {
      products_per_page: {% if paginate_by %} {{ paginate_by | json }} {% else %} 24 {% endif %},
      pagination: {% if section.settings.pagination %} {{ section.settings.pagination | json }} {% else %} "traditional" {% endif %},
      emphasize_price: {% if settings.product_grid_emphasize_price != nil %} {{ settings.product_grid_emphasize_price | json }} {% else %} true {% endif %},
      enable_quick_look: {% if settings.product_grid_show_quickshop != nil %} {{ settings.product_grid_show_quickshop | json }} {% else %} false {% endif %},
      enable_quick_buy: {% if settings.product_grid_show_atc != nil %} {{ settings.product_grid_show_atc | json }} {% else %} false {% endif %},
      show_modal: {% if settings.product_grid_quick_shop != nil %} {{ settings.product_grid_quick_shop | json }} {% else %} true {% endif %},
      product_grid_image_style: {% if settings.product_grid_image_style != nil %} {{ settings.product_grid_image_style | json }} {% else %} "natural" {% endif %},
      product_ratings_reviews: {% if settings.product_ratings_reviews != nil %} {{ settings.product_ratings_reviews | json }} {% else %} true {% endif %},
      product_sales_badge: {% if settings.product_sales_badge != nil %} {{ settings.product_sales_badge | json }} {% else %} true {% endif %},
      product_sales_badge_style: {% if settings.product_sales_badge_style != nil %} {{ settings.product_sales_badge_style | json }} {% else %} "percentile" {% endif %},
      product_grid_show_second_image:  {% if settings.product_grid_show_second_image != nil %} {{ settings.product_grid_show_second_image | json }} {% else %} false {% endif %},
      show_vendor: {% if settings.product_show_vendor != nil %} {{ settings.product_show_vendor | json }} {% else %} false {% endif %},
      show_by: {% if section.settings.show_by != nil %} {{ section.settings.show_by | json }} {% else %} true {% endif %},
      quickshop_product_cart_redirect: {% if settings.quickshop_product_cart_redirect != nil %} {{ settings.quickshop_product_cart_redirect | json }} {% else %} false {% endif %},
      swatches_enable: {% if settings.swatches_enable != nil %} {{ settings.swatches_enable | json }} {% else %} true {% endif %},
      swatches_product_page_only: {% if settings.swatches_product_page_only != nil %} {{ settings.swatches_product_page_only | json }} {% else %} false {% endif %},
      swatches_swatch_trigger: {% if settings.swatches_swatch_trigger %} {{ settings.swatches_swatch_trigger | json }} {% else %} "color" {% endif %},
      swatches_shape: {% if settings.swatches_shape %} {{ settings.swatches_shape | json }} {% else %} "square" {% endif %},
      swatches_product_card_hover: {% if settings.swatches_product_card_hover %} {{ settings.swatches_product_card_hover | json }} {% else %} "always" {% endif %},
      swatches_custom_colors: {% if settings.swatches_custom_colors %} {{ settings.swatches_custom_colors | json }} {% else %} "" {% endif %},
      money_format: {{ shop.money_format | json }},
    }
  };
</script>
{% if sp_paginate_by %}{% render 'spurit_po2_collection_template_snippet', paginate_by: sp_paginate_by %}{% endif %}{% schema %}

{
  "name": "Collection pages",
  "class": "collection--section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_breadcrumbs",
      "label": "Show breadcrumb navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_collection_image",
      "label": "Show collection image",
      "default": true
    },
    {
      "type": "range",
      "id": "products_per_page_range",
      "label": "Products per page",
      "min": 24,
      "max": 48,
      "step": 12,
      "default": 24
    },
    {
      "type": "select",
      "id": "pagination",
      "label": "Pagination method",
      "options": [
        {
          "value": "click_to_load",
          "label": "Click-to-load"
        },
        {
          "value": "infinite_scroll",
          "label": "Infinite scroll"
        },
        {
          "value": "traditional",
          "label": "Jump-to-page"
        }
      ],
      "default": "click_to_load"
    },
    {
      "type": "header",
      "content": "Utility bar"
    },
    {
      "type": "checkbox",
      "id": "sort_by",
      "label": "Show \"Sort by\" dropdown",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_by",
      "label": "Show products per page links",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "grid_list",
      "label": "Show grid/list view toggle",
      "default": true
    },
    {
      "type": "header",
      "content": "Sidebar"
    },
    {
      "type": "checkbox",
      "id": "show_sidebar",
      "label": "Show sidebar",
      "default": true
    },
    {
      "type": "select",
      "id": "filter_style",
      "label": "Filters",
      "info":"[Learn more](https://support.pixelunion.net/hc/en-us/articles/360022061114)",
      "options": [
        {
          "value": "none",
          "label": "Hide filters"
        },
        {
          "value": "tags",
          "label": "By tag"
        },
        {
          "value": "groups",
          "label": "By group"
        }
      ],
      "default": "tags"
    },
    {
      "id": "filter_limit",
      "type": "select",
      "label": "Hide additional tags after",
      "options": [
        {
          "value": "5",
          "label": "5 tags"
        },
        {
          "value": "6",
          "label": "6 tags"
        },
        {
          "value": "8",
          "label": "8 tags"
        },
        {
          "value": "10",
          "label": "10 tags"
        },
        {
          "value": "15",
          "label": "15 tags"
        },
        {
          "value": "20",
          "label": "20 tags"
        },
        {
          "value": "999",
          "label": "Show all tags"
        }
      ],
      "default": "999"
    },
    {
      "type": "select",
      "id": "filter_position",
      "label": "Filters position",
      "options": [
        {
          "value": "above_menus",
          "label": "Above menus"
        },
        {
          "value": "below_menus",
          "label": "Below menus"
        }
      ],
      "default": "above_menus"
    },
    {
      "type":      "text",
      "id":        "grid_categories",
      "label":     "Display filters as grid",
      "info":      "List groups to display in an alternate grid format, like “Size, Price”. [Learn more](https://support.pixelunion.net/hc/en-us/articles/360022061114-Setting-up-Superstore-s-sidebar-filter-and-menus)"
    },
    {
      "type":      "textarea",
      "id":        "custom_ordered_categories",
      "label":     "Group order",
      "info":      "Define a custom order for groups, like “Color, Brand, Size”. Other groups will appear at the bottom."
    },
    {
      "type":      "textarea",
      "id":        "custom_ordered_tags",
      "label":     "Tag order",
      "info":      "Define a custom order for tags, like “Size_S, Size_M, Size_L”. Items must exactly match tag name, including group prefix. Other tags will appear at the bottom."
    },
    {
      "type": "range",
      "id": "menu_depth_range",
      "label": "Menu depth visibility",
      "info": "[Learn more](https://help.shopify.com/manual/sell-online/online-store/menus-and-links#create-a-drop-down-menu)",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "menu",
      "name": "Menu",
      "settings": [
        {
          "id": "menu",
          "type": "link_list",
          "label": "Menu",
          "info": "This menu will show as many drop-down items as specified above under \"Menu depth visibility.\""
        }
      ],
      "limit": 10
    }
  ]
}

{% endschema %}