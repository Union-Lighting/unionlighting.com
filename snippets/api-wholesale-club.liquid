{% comment %}
  This is Wholesale Club's API implementation.


{% if api == 'page:body' %}
  {% capture wholesale_page_body %}
    <script>
      function SAWOrderNote(note) {
        note = note.replace("old text", "new text");
        return note;
      }

      function SAWComplete(res) {
        setTimeout(function() {
          jQuery(".cart__note-add").click();
        }, 500);

        if (res.warning_note != '') {
          var $cSelectors = [
            '.purchase-benefits',
            'input[name="checkout"]',
            'button[name="checkout"]',
            '[href$="checkout"]','input[name="goto_pp"]',
            'button[name="goto_pp"]',
            'input[name="goto_gc"]',
            'button[name="goto_gc"]',
            '.google-wallet-button-holder',
            '.amazon-payments-pay-button',
            '.alt-payment-list-amazon-button-image',
            '.additional-checkout-button__logo'
          ];

          $cSelectors.forEach(function(selector) {
            jQuery(selector).remove();
          });
          return;
        }

        setTimeout(function() {
          //jQuery(".saw-cart-original-total").remove();
        }, 10);

        return;
      }
    </script>

    {% include 'saw_cart' %}
  {% endcapture %}

  {% assign page_body = page_body | append: wholesale_page_body %}
{% endif %}

{% comment %}
  Get the JSON representing a product

  @param {ProductDrop} product
    A product

  @assign {String} json
    The product JSON
{% endcomment %}
{% if api == 'product:json' %}
  {%- include 'saw_product_json' with product -%}
  {% assign json = saw_json %}
{% endif %}


{% comment %}
  Get the price min, price, price max,
  compare at price min, compare at price, and compare at price max
  of a variant

  @param {ProductDrop} product
    A product

  @assign {Number} price_min
    The product minimum price
  @assign {Number} price
    The product price
  @assign {Number} price_max
    The product maximum price
  @assign {Number} compare_at_price_min
    The product minimum compare at price
  @assign {Number} compare_at_price
    The product compare at price
  @assign {Number} compare_at_price_max
    The product maximum compare at price
{% endcomment %}
{% if api == 'product:price' %}
  {% assign base_product = product %}
  {% assign base_variant = product.selected_or_first_available_variant %}

  {% if shop.metafields.sawholesale['base_price'] == blank %}
    {% assign base_price = 'compare_at_price' %}
  {% else %}
    {% assign base_price = shop.metafields.sawholesale['base_price'] %}
  {% endif %}

  {% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

  {% if customer.tags != blank %}
    {% for mf in base_product.metafields.sawholesale %}
      {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
      {% if customer.tags contains product_customer_tag %}
        {% assign saw_has_discount = true %}
        {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
        {% assign price_key = product_customer_tag | prepend: 'price_' %}
        {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% assign saw_discount = 1 | minus: saw_discount %}

  {% if base_price == 'price' or base_variant.compare_at_price == blank or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
    {% assign saw_product_compare_at_price = base_variant.price %}
  {% else %}
    {% assign saw_product_compare_at_price = base_variant.compare_at_price %}
  {% endif %}

  {% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
  {% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
    {% assign saw_product_price = base_variant.metafields.sawholesale[price_key] %}
  {% else %}
    {% assign saw_product_price = saw_product_compare_at_price | times: saw_discount %}
  {% endif %}

  {% if saw_has_discount == false or saw_product_price >= saw_product_compare_at_price %}
    {% assign price_min = product.price_min %}
    {% assign price = product.price %}
    {% assign price_max = product.price_max %}

    {% assign compare_at_price_min = product.compare_at_price_min %}
    {% assign compare_at_price = product.compare_at_price %}
    {% assign compare_at_price_max = product.compare_at_price_max %}
  {% else %}
    {% assign price_min = base_product.price_min | times: saw_discount | round %}
    {% assign price = saw_product_price | round %}
    {% assign price_max = base_product.price_max | times: saw_discount | round %}

    {% assign compare_at_price = saw_product_compare_at_price | round %}
    {% if base_product.compare_at_price_min != 0 %}
      {% assign compare_at_price_min = base_product.compare_at_price_min %}
    {% else %}
      {% assign compare_at_price_min = base_product.price_min %}
    {% endif %}
    {% if base_product.compare_at_price_max != 0 %}
      {% assign compare_at_price_max = base_product.compare_at_price_max %}
    {% else %}
      {% assign compare_at_price_max = base_product.price_max %}
    {% endif %}
  {% endif %}
{% endif %}


{% comment %}
  Get the price, and compare at price of a variant

  @param {VariantDrop} variant
    A product variant

  @assign {Number} price
    The variant price
  @assign {Number} compare_at_price
    The variant compare at price
{% endcomment %}
{% if api == 'variant:price' %}
  {% assign base_product = product %}
  {% assign base_variant = variant %}

  {% if shop.metafields.sawholesale['base_price'] == blank %}
    {% assign base_price = 'compare_at_price' %}
  {% else %}
    {% assign base_price = shop.metafields.sawholesale['base_price'] %}
  {% endif %}

  {% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

  {% if customer.tags != blank %}
    {% for mf in base_product.metafields.sawholesale %}
      {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
      {% if customer.tags contains product_customer_tag %}
        {% assign saw_has_discount = true %}
        {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
        {% assign price_key = product_customer_tag | prepend: 'price_' %}
        {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% assign saw_discount = 1 | minus: saw_discount %}

  {% if base_price == 'price' or base_variant.compare_at_price == blank or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
    {% assign saw_variant_compare_at_price = base_variant.price %}
  {% else %}
    {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
  {% endif %}

  {% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
  {% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
    {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
  {% else %}
    {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
  {% endif %}
  
  {% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
    {% assign price = variant.price %}
    {% assign compare_at_price = variant.compare_at_price %}
  {% else %}
    {% assign price = saw_variant_price | round %}
    {% assign compare_at_price = saw_variant_compare_at_price | round %}
  {% endif %}
{% endif %}
{% endcomment %}